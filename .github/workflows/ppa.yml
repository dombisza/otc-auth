name: Push to PPA
on: [workflow_dispatch, pull_request]
  
jobs:
  build:
    name: Build .deb archive for release
    runs-on: ubuntu-22.04
    steps:
      - name: Get latest release
        uses: robinraju/release-downloader@v1.8
        with:
          latest: true
          fileName: "*_linux_*"
          
      - name: Decompress archives
        run: |
          for a in *;
          do mkdir ${a%???????} && tar -zxvf $a -C ${a%???????} && rm $a;
          echo "a: $a, atrunc: ${a%???????}";
          pwd;
          ls -la;
          done;
        
      - name: Create .deb folders and add control files to them
        shell: bash
        run: |
          for d in */ ; 
            do cd "$d" &&
            rm LICENSE &&
            rm README.md &&
            mkdir -p usr/bin/ &&
            mv ./otc-auth usr/bin/ &&
            mkdir "DEBIAN" &&
            cd "DEBIAN" &&
            tmp=${d#*_};
            tmp1=${tmp%_*};
            version=${tmp1%_*};
            tmpa=${tmp#*_};
            tmpa2=${tmpa#*_};
            arch=${tmpa2//"\/"/};
            echo -e "Package: otc-auth\nVersion: $version\nMaintainer: Mweya Ruider <mweya.ruider@iits-consulting.de>\nDepends: \nArchitecture: $arch\nHomepage: https://github.com/iits-consulting/otc-auth \nDescription: Open Source CLI for the Open Telekom Cloud written in go." > "control" &&
            cd ../.. &&
            mv "$d" "${d/'_linux_'/-1_}";
            done;
            
      - name: Build .deb archives and delete directories
        run: |
          for d in */ ; 
          do dpkg --build $d && rm -rf $d;
          done;
        
      - name: Create PPA repo structure
        run: |
          apt-ftparchive release . > Release;
          dpkg-scanpackages --multiversion . > Packages;
          gzip -k -f Packages;
          echo "deb [signed-by=/etc/apt/trusted.gpg.d/otc-auth_ppa.gpg] https://iits-consulting.github.io/ppa ./" > otc-auth.list
          echo -e " # <img src='https://iits-consulting.de/wp-content/uploads/2021/08/iits-logo-2021-red-square-xl.png' width="150"/> otc-auth PPA \n This repo (based on the one [here](https://github.com/assafmo/ppa)) contains .deb files built from the [latest version of otc-auth](https://github.com/iits-consulting/otc-auth/releases).\n\n ## Usage \n \`\`\`bash \n sudo curl -SsL -o /etc/apt/trusted.gpg.d/otc-auth_ppa.gpg https://iits-consulting.github.io/ppa/debian/KEY.gpg \n sudo curl -SsL -o /etc/apt/sources.list.d/otc-auth.list https://iits-consulting.github.io/ppa/debian/otc-auth.list \n sudo apt update \n sudo apt install otc-auth \n \`\`\`" > README.md;
      
      - name: Generate keys
        run: |
          export GPG_TTY=`tty`;
          echo "$GPG_PPA_PRIV_KEY" | base64 --decode | gpg --import --batch;
          gpg --armor --export "mweya.ruider@iits-consulting.de" > KEY.gpg;
          echo "Sanity Check: $(ls -la Release)"
          gpg --pinentry-mode loopback --passphrase "${GPG_PPA_PRIV_KEY_PASSPHRASE}" --default-key "mweya.ruider@iits-consulting.de" -abs -o - Release > Release.gpg;
          gpg --pinentry-mode loopback --passphrase "${GPG_PPA_PRIV_KEY_PASSPHRASE}" --default-key "mweya.ruider@iits-consulting.de" --clearsign -o - Release > InRelease;
        env:
          GPG_PPA_PRIV_KEY: ${{ secrets.GPG_PPA_PRIV_KEY }}
          GPG_PPA_PRIV_KEY_PASSPHRASE: ${{ secrets.GPG_PPA_PRIV_KEY_PASSPHRASE }}
          
      - name: Final cleanup
        run: |
          mkdir .debian
          mv README.md .README.md
          mv * .debian
          mv .README.md README.md
          mv .debian debian
          
      - name: Push to PPA repo
        uses: cpina/github-action-push-to-another-repository@main
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source-directory: .
          destination-github-username: 'iits-consulting'
          destination-repository-name: 'ppa'
          user-email: mweya.ruider@iits-consulting.de
          target-branch: main
