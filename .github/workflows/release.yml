name: Release
on:
  push:
    tags:
      - "*"
jobs:
  goreleaser:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          push: true
          build-args: |
            VERSION=${{ env.RELEASE_VERSION }}
            GITHUB_REPOSITORY=${{ github.repository }}
          tags: |
            ghcr.io/iits-consulting/otc-auth:latest
            ghcr.io/iits-consulting/otc-auth:${{ env.RELEASE_VERSION }}
  aur-publish:
    runs-on: ubuntu-latest
    depends-on: goreleaser
    steps:
      - uses: actions/checkout@v2

      - name: Prepare PKGBUILD
        run: |
          # We simply imply that ref is always a valid tag for now.
          sed -e "s/__VERSION__/${GITHUB_REF_NAME}/" <PKGBUILD.template >PKGBUILD
      - name: Publish AUR package
        uses: KSXGitHub/github-actions-deploy-aur@v2.7.0
        with:
          pkgname: otc-auth
          pkgbuild: ./PKGBUILD
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: "Bump to ${{ github.github_ref_name }}"
          ssh_keyscan_types: rsa,dsa,ecdsa,ed25519

  deb-publish:
    runs-on: ubuntu-latest
    depends-on: goreleaser
    steps:
      - name: Get latest debs
        uses: robinraju/release-downloader@v1.8
        with:
            latest: true
            fileName: "*.deb"
      - name: Create PPA repo structure
        run: |
          dpkg-scanpackages --multiversion . > Packages;
          gzip -k -f Packages;
          apt-ftparchive release . > Release;
          echo "deb [signed-by=/etc/apt/trusted.gpg.d/otc-auth_ppa.gpg] https://iits-consulting.github.io/ppa/debian ./" > otc-auth.list
          echo -e " # <img src='https://iits-consulting.de/wp-content/uploads/2021/08/iits-logo-2021-red-square-xl.png' width="150"/> otc-auth PPA \n This repo (based on the one [here](https://github.com/assafmo/ppa)) contains .deb files built from the [latest version of otc-auth](https://github.com/iits-consulting/otc-auth/releases).\n\n ## Usage \n \`\`\`bash \n sudo curl -SsL -o /etc/apt/trusted.gpg.d/otc-auth_ppa.gpg https://iits-consulting.github.io/ppa/debian/KEY.gpg \n sudo curl -SsL -o /etc/apt/sources.list.d/otc-auth.list https://iits-consulting.github.io/ppa/debian/otc-auth.list \n cat /etc/apt/trusted.gpg.d/otc-auth_ppa.gpg | gpg --dearmor | tee /etc/apt/trusted.gpg.d/otc-auth_ppa.gpg >/dev/null \n sudo apt update \n sudo apt install otc-auth \n \`\`\`" > README.md;

      - name: Generate keys
        run: |
          export GPG_TTY=`tty`;
          echo "$GPG_PPA_PRIV_KEY" | base64 --decode | gpg --import --batch;
          gpg --armor --export "mweya.ruider@iits-consulting.de" > KEY.gpg;
          echo "Sanity Check: $(ls -la Release)"
          gpg --pinentry-mode loopback --passphrase "${GPG_PPA_PRIV_KEY_PASSPHRASE}" --default-key "mweya.ruider@iits-consulting.de" -abs -o - Release > Release.gpg;
          gpg --pinentry-mode loopback --passphrase "${GPG_PPA_PRIV_KEY_PASSPHRASE}" --default-key "mweya.ruider@iits-consulting.de" --clearsign -o - Release > InRelease;
        env:
          GPG_PPA_PRIV_KEY: ${{ secrets.GPG_PPA_PRIV_KEY }}
          GPG_PPA_PRIV_KEY_PASSPHRASE: ${{ secrets.GPG_PPA_PRIV_KEY_PASSPHRASE }}

      - name: Final cleanup
        run: |
          mkdir .debian
          mv README.md .README.md
          mv * .debian
          mv .README.md README.md
          mv .debian debian

      - name: Push to PPA repo
        uses: cpina/github-action-push-to-another-repository@main
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source-directory: .
          destination-github-username: 'iits-consulting'
          destination-repository-name: 'ppa'
          user-email: mweya.ruider@iits-consulting.de
          target-branch: main
